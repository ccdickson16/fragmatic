table
table<-read.table(file="../example/sim.tsv",header=T)
table
plot(table$Mising_sites, table$Fragment_length)
length(table$Fragment_length)
length(table$Missing_sites)
q()
impulsePlot <- function(x) {
#Impulse plot with automatic axes
plot(table$x,table$Fragment_length,type="h", main=name,
xlab="Fragment length",ylab="Frequency")
#Impulse plot xlim=100:5000
plot(table$x,table$Fragment_length,type="h", main=name,
xlab="Fragment length",ylab="Frequency",xlim=range(0:5000))
#Impulse plot xlim=100:5000
plot(table$x,table$Fragment_length,type="h", main=name,
xlab="Fragment length",ylab="Frequency",xlim=range(0:1000))
}
impulsePlot(Missing_sites)
table$Missing_sites
q()
table$Missing_sites
split<-smooth.spline(table$Missing_sites, table$Fragment_length, spar=0.05)
split<-smooth.spline(table$Missing_sites, table$Fragment_length, spar=0.05, tol=1)
split<-smooth.spline(table$Missing_sites, table$Fragment_length, spar=0.05, tol=10)
split<-smooth.spline(table$Missing_sites, table$Fragment_length, spar=0.05, tol=0)
split<-smooth.spline(table$Missing_sites, table$Fragment_length, spar=0.05, tol=0.5)
table[,1]
table[1,]
split<-smooth.spline(table$GAATTC.CCGG, table$Fragment_length, spar=0.05, tol=0.5)
split
split<-smooth.spline(table$GAATTC.CCGG, table$Fragment_length, spar=0.05, tol=0.1)
plot(split)
split<-smooth.spline(table$GAATTC.CCGG, table$Fragment_length, spar=0.05)
plot(split)
split<-smooth.spline(table$Missing_sites, table$Fragment_length, spar=0.05)
split<-smooth.spline(table$Missing_sites, table$Fragment_length, spar=0.05, tol=0.00001)
unique(table$Missing_sites)
for(i in names(table)){print(i)}
for(i in names(table)){length(unique(table[[i]]))}
for(i in names(table)){length(table[[i]]))}
for(i in names(table)){length(table[[i]])}
for(i in names(table)){print(length(table[[i]]))}
for(i in names(table)){print(length(unique(table[[i]])))}
plot(table$GAATTC.CCGG, table$Fragment_length)
plot(table$GAATTC.CCGG, table$Fragment_length, type=l)
plot(table$GAATTC.CCGG, table$Fragment_length, type="l")
for(i in names(table)){q()}
